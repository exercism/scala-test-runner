<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="MBP-Macbook" name="GradeSchoolTest" tests="7" errors="0" failures="1" skipped="0" time="0.028" timestamp="2021-02-21T12:47:35">
                     <properties>
      <property name="java.specification.version" value="15"/><property name="sun.jnu.encoding" value="UTF-8"/><property name="sun.arch.data.model" value="64"/><property name="java.vendor.url" value="https://openjdk.java.net/"/><property name="sun.boot.library.path" value="/usr/local/Cellar/openjdk/15.0.1/libexec/openjdk.jdk/Contents/Home/lib"/><property name="sun.java.command" value="/usr/local/Cellar/sbt/1.4.7/libexec/bin/sbt-launch.jar test"/><property name="jdk.debug" value="release"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2020-10-20"/><property name="java.home" value="/usr/local/Cellar/openjdk/15.0.1/libexec/openjdk.jdk/Contents/Home"/><property name="file.separator" value="/"/><property name="java.vm.compressedOopsMode" value="Zero based"/><property name="line.separator" value="
"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="15.0.1+9"/><property name="user.name" value="root"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="UTF-8"/><property name="java.io.tmpdir" value="/var/folders/zz/zyxvpxvq6csfxvn_n0000000000000/T/"/><property name="java.version" value="15.0.1"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="java.library.path" value="/Users/pro/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/><property name="java.vendor" value="N/A"/><property name="scala.ext.dirs" value="/var/root/.sbt/0.13/java9-rt-ext-n_a_15_0_1"/><property name="sun.io.unicode.encoding" value="UnicodeBig"/><property name="socksNonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="java.class.path" value="/usr/local/Cellar/sbt/1.4.7/libexec/bin/sbt-launch.jar"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="Europe/Warsaw"/><property name="java.vm.specification.version" value="15"/><property name="os.name" value="Mac OS X"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="PL"/><property name="http.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="/var/root"/><property name="user.language" value="en"/><property name="swoval.tmpdir" value="/var/root/.sbt/1.0"/><property name="jline.esc.timeout" value="0"/><property name="ftp.nonProxyHosts" value="local|*.local|169.254/16|*.169.254/16"/><property name="path.separator" value=":"/><property name="os.version" value="11.1"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="OpenJDK Runtime Environment"/><property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/><property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/><property name="user.dir" value="/Users/pro/Exercism/scala/grade-school"/><property name="os.arch" value="x86_64"/><property name="java.vm.info" value="mixed mode, sharing"/><property name="java.vm.version" value="15.0.1+9"/><property name="java.class.version" value="59.0"/>
    </properties>
                     <testcase classname="GradeSchoolTest" name="empty school" time="0.016">

                                               </testcase><testcase classname="GradeSchoolTest" name="add student" time="0.0">

                                               </testcase><testcase classname="GradeSchoolTest" name="add more students in same class" time="0.008">
                                                 <failure message="TreeMap(2 -&gt; List(&quot;James&quot;, &quot;Blair2&quot;, &quot;Paul&quot;)) was not equal to Map(2 -&gt; List(&quot;James&quot;, &quot;Blair&quot;, &quot;Paul&quot;))" type="org.scalatest.exceptions.TestFailedException">org.scalatest.exceptions.TestFailedException: TreeMap(2 -&gt; List(&quot;James&quot;, &quot;Blair2&quot;, &quot;Paul&quot;)) was not equal to Map(2 -&gt; List(&quot;James&quot;, &quot;Blair&quot;, &quot;Paul&quot;))
	at org.scalatest.MatchersHelper$.indicateFailure(MatchersHelper.scala:343)
	at org.scalatest.Matchers$ShouldMethodHelper$.shouldMatcher(Matchers.scala:6723)
	at org.scalatest.Matchers$AnyShouldWrapper.should(Matchers.scala:6759)
	at GradeSchoolTest.$anonfun$new$3(GradeSchoolTest.scala:22)
	at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)
	at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)
	at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)
	at org.scalatest.Transformer.apply(Transformer.scala:22)
	at org.scalatest.Transformer.apply(Transformer.scala:20)
	at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:186)
	at org.scalatest.TestSuite.withFixture(TestSuite.scala:196)
	at org.scalatest.TestSuite.withFixture$(TestSuite.scala:195)
	at org.scalatest.FunSuite.withFixture(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike.invokeWithFixture$1(FunSuiteLike.scala:184)
	at org.scalatest.FunSuiteLike.$anonfun$runTest$1(FunSuiteLike.scala:196)
	at org.scalatest.SuperEngine.runTestImpl(Engine.scala:286)
	at org.scalatest.FunSuiteLike.runTest(FunSuiteLike.scala:196)
	at org.scalatest.FunSuiteLike.runTest$(FunSuiteLike.scala:178)
	at GradeSchoolTest.org$scalatest$OneInstancePerTest$$super$runTest(GradeSchoolTest.scala:4)
	at org.scalatest.OneInstancePerTest.runTest(OneInstancePerTest.scala:131)
	at org.scalatest.OneInstancePerTest.runTest$(OneInstancePerTest.scala:123)
	at GradeSchoolTest.runTest(GradeSchoolTest.scala:4)
	at org.scalatest.OneInstancePerTest.runTests(OneInstancePerTest.scala:181)
	at org.scalatest.OneInstancePerTest.runTests$(OneInstancePerTest.scala:172)
	at GradeSchoolTest.runTests(GradeSchoolTest.scala:4)
	at org.scalatest.Suite.run(Suite.scala:1124)
	at org.scalatest.Suite.run$(Suite.scala:1106)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike.$anonfun$run$1(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:518)
	at org.scalatest.FunSuiteLike.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike.run$(FunSuiteLike.scala:232)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.OneInstancePerTest.runTest(OneInstancePerTest.scala:128)
	at org.scalatest.OneInstancePerTest.runTest$(OneInstancePerTest.scala:123)
	at GradeSchoolTest.runTest(GradeSchoolTest.scala:4)
	at org.scalatest.FunSuiteLike.$anonfun$runTests$1(FunSuiteLike.scala:229)
	at org.scalatest.SuperEngine.$anonfun$runTestsInBranch$1(Engine.scala:393)
	at scala.collection.immutable.List.foreach(List.scala:333)
	at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:381)
	at org.scalatest.SuperEngine.runTestsInBranch(Engine.scala:376)
	at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:458)
	at org.scalatest.FunSuiteLike.runTests(FunSuiteLike.scala:229)
	at org.scalatest.FunSuiteLike.runTests$(FunSuiteLike.scala:228)
	at GradeSchoolTest.org$scalatest$OneInstancePerTest$$super$runTests(GradeSchoolTest.scala:4)
	at org.scalatest.OneInstancePerTest.runTests(OneInstancePerTest.scala:188)
	at org.scalatest.OneInstancePerTest.runTests$(OneInstancePerTest.scala:172)
	at GradeSchoolTest.runTests(GradeSchoolTest.scala:4)
	at org.scalatest.Suite.run(Suite.scala:1124)
	at org.scalatest.Suite.run$(Suite.scala:1106)
	at org.scalatest.FunSuite.org$scalatest$FunSuiteLike$$super$run(FunSuite.scala:1560)
	at org.scalatest.FunSuiteLike.$anonfun$run$1(FunSuiteLike.scala:233)
	at org.scalatest.SuperEngine.runImpl(Engine.scala:518)
	at org.scalatest.FunSuiteLike.run(FunSuiteLike.scala:233)
	at org.scalatest.FunSuiteLike.run$(FunSuiteLike.scala:232)
	at org.scalatest.FunSuite.run(FunSuite.scala:1560)
	at org.scalatest.tools.Framework.org$scalatest$tools$Framework$$runSuite(Framework.scala:317)
	at org.scalatest.tools.Framework$ScalaTestTask.execute(Framework.scala:510)
	at sbt.TestRunner.runTest$1(TestFramework.scala:139)
	at sbt.TestRunner.run(TestFramework.scala:154)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.$anonfun$apply$1(TestFramework.scala:317)
	at sbt.TestFramework$.sbt$TestFramework$$withContextLoader(TestFramework.scala:277)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:317)
	at sbt.TestFramework$$anon$3$$anonfun$$lessinit$greater$1.apply(TestFramework.scala:317)
	at sbt.TestFunction.apply(TestFramework.scala:329)
	at sbt.Tests$.$anonfun$toTask$1(Tests.scala:311)
	at sbt.std.Transform$$anon$3.$anonfun$apply$2(Transform.scala:46)
	at sbt.std.Transform$$anon$4.work(Transform.scala:67)
	at sbt.Execute.$anonfun$submit$2(Execute.scala:281)
	at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:19)
	at sbt.Execute.work(Execute.scala:290)
	at sbt.Execute.$anonfun$submit$1(Execute.scala:281)
	at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178)
	at sbt.CompletionService$$anon$2.call(CompletionService.scala:37)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
	at java.base/java.lang.Thread.run(Thread.java:832)
</failure>
                                               </testcase><testcase classname="GradeSchoolTest" name="add students to different grades" time="0.001">

                                               </testcase><testcase classname="GradeSchoolTest" name="get students in a grade" time="0.0">

                                               </testcase><testcase classname="GradeSchoolTest" name="get students in a non-existent grade" time="0.0">

                                               </testcase><testcase classname="GradeSchoolTest" name="sort school" time="0.003">

                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>
